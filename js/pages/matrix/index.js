/**
 * ========================================
 * MATRIX PAGE v11.0 - –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù
 * MITRE ATT&CK Matrix Application
 * ========================================
 * 
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞—Ç—Ä–∏—Ü—ã
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤ MatrixOrganizer
 * 
 * @author Storm Labs
 * @version 11.0.0-FIXED
 * @date 2025-10-17
 */

const MatrixPage = {
    // ========================================
    // –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
    // ========================================
    config: {
        version: '11.0.0',
        refreshInterval: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
        autoRefresh: false,
        maxRetries: 3,
        retryDelay: 1000
    },

    // ========================================
    // –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
    // ========================================
    state: {
        // –î–∞–Ω–Ω—ã–µ
        matrixData: null,
        organizedData: null,

        // –§–∏–ª—å—Ç—Ä—ã
        filters: {
            platform: null,
            coverage: 'all',
            tactic: null,
            search: ''
        },

        // UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        expandedTechniques: new Set(),
        loading: false,
        error: null,

        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        lastUpdate: null,
        initialized: false
    },

    // –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    refreshTimer: null,

    // ========================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    // ========================================

    /**
     * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    async init() {
        console.log(`üöÄ Initializing Matrix Page v${this.config.version}...`);

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            this.checkDependencies();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            if (window.Notifications && !Notifications.container) {
                Notifications.init();
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
            this.showLoading();

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã
            await this.loadMatrixData();

            // üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ä–≥–∞–Ω–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            this.organizeMatrixData();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
            this.initializeUI();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.initializeEvents();

            // –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
            this.render();

            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
            if (this.config.autoRefresh) {
                this.startAutoRefresh();
            }

            // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
            this.state.initialized = true;
            this.state.lastUpdate = new Date();

            console.log('‚úÖ Matrix Page initialized successfully');

            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            if (window.Notifications) {
                Notifications.show(
                    '–ú–∞—Ç—Ä–∏—Ü–∞ MITRE ATT&CK –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
                    'success',
                    { duration: 3000 }
                );
            }

        } catch (error) {
            console.error('‚ùå Matrix Page initialization failed:', error);
            this.handleError(error);
        }
    },

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
     */
    checkDependencies() {
        const requiredModules = [
            'API', 'Utils', 'ModalEngine',
            'MatrixServices', 'MatrixOrganizer',
            'MatrixRenderer', 'MatrixEvents'
        ];

        const missingModules = requiredModules.filter(module => !window[module]);

        if (missingModules.length > 0) {
            throw new Error(`Missing required modules: ${missingModules.join(', ')}`);
        }

        console.log('‚úÖ All dependencies available');
    },

    // ========================================
    // –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•
    // ========================================

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü—ã
     */
    async loadMatrixData() {
        console.log('üì° Loading matrix data...');
        this.state.loading = true;
        this.state.error = null;

        let retryCount = 0;

        while (retryCount < this.config.maxRetries) {
            try {
                this.state.matrixData = await MatrixServices.fetchMatrix();

                console.log('‚úÖ Matrix data loaded:', {
                    tactics: this.state.matrixData.tactics?.length || 0,
                    techniques: this.state.matrixData.techniques?.length || 0,
                    parent_techniques: this.state.matrixData.parent_techniques?.length || 0,
                    statistics: this.state.matrixData.statistics ? 'available' : 'unavailable'
                });

                this.state.loading = false;
                return;

            } catch (error) {
                retryCount++;
                console.warn(`‚ùå Load attempt ${retryCount} failed:`, error.message);

                if (retryCount >= this.config.maxRetries) {
                    throw error;
                }

                // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                await Utils.sleep(this.config.retryDelay * retryCount);
            }
        }
    },

    /**
     * üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü—ã
     */
    organizeMatrixData() {
        if (!this.state.matrixData) {
            throw new Error('No matrix data to organize');
        }

        console.log('üóÇÔ∏è Organizing matrix data...');

        // üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ organizeMatrix
        this.state.organizedData = MatrixOrganizer.organizeMatrix(
            this.state.matrixData,
            this.state.filters
        );

        console.log('‚úÖ Matrix data organized:', {
            rows: this.state.organizedData.rows?.length || 0,
            tactics: this.state.organizedData.tactics?.length || 0,
            filteredCount: this.state.organizedData.filteredCount || 0
        });
    },

    // ========================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø UI
    // ========================================

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    initializeUI() {
        console.log('üé® Initializing UI...');

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        const filtersContainer = Utils.$('#matrix-filters-container') || this.createFiltersContainer();
        const matrixContainer = Utils.$('#matrix-container') || this.createMatrixContainer();
        const statisticsContainer = Utils.$('#matrix-statistics-container') || this.createStatisticsContainer();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        if (!filtersContainer || !matrixContainer) {
            throw new Error('Required UI containers not found');
        }

        // –†–µ–Ω–¥–µ—Ä–∏–º —Ñ–∏–ª—å—Ç—Ä—ã
        MatrixRenderer.renderFilters(
            filtersContainer,
            this.state.organizedData.tactics,
            this.state.filters
        );

        // –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –¥–∞–Ω–Ω—ã–µ)
        if (statisticsContainer && this.state.matrixData.statistics) {
            MatrixRenderer.renderStatistics(
                statisticsContainer,
                this.state.matrixData.statistics
            );
        }

        console.log('‚úÖ UI initialized');
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
     */
    createFiltersContainer() {
        const container = Utils.createElement('div', 'matrix-filters-wrapper');
        container.id = 'matrix-filters-container';
        const pageContent = Utils.$('.page-content') || Utils.$('main') || document.body;
        pageContent.insertBefore(container, pageContent.firstChild);
        return container;
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–∞—Ç—Ä–∏—Ü—ã (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
     */
    createMatrixContainer() {
        const container = Utils.createElement('div', 'matrix-main-container');
        container.id = 'matrix-container';
        const pageContent = Utils.$('.page-content') || Utils.$('main') || document.body;
        pageContent.appendChild(container);
        return container;
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
     */
    createStatisticsContainer() {
        const container = Utils.createElement('div', 'matrix-statistics-wrapper');
        container.id = 'matrix-statistics-container';
        const filtersContainer = Utils.$('#matrix-filters-container');

        if (filtersContainer && filtersContainer.parentNode) {
            filtersContainer.parentNode.insertBefore(container, filtersContainer.nextSibling);
        }

        return container;
    },

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    initializeEvents() {
        console.log('üéÆ Initializing events...');
        MatrixEvents.init(this.state, () => this.render());
        console.log('‚úÖ Events initialized');
    },

    // ========================================
    // –†–ï–ù–î–ï–†–ò–ù–ì
    // ========================================

    /**
     * –ü–æ–∫–∞–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoading() {
        const matrixContainer = Utils.$('#matrix-container');
        if (matrixContainer) {
            MatrixRenderer.renderLoading(matrixContainer);
        }
    },

    /**
     * üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
     */
    render() {
        if (!this.state.organizedData) {
            console.warn('‚ö†Ô∏è No organized data available for rendering');
            return;
        }

        console.log('üé® Rendering matrix...');

        try {
            // üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–µ–æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Ç–µ–∫—É—â–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
            const organizedData = MatrixOrganizer.organizeMatrix(
                this.state.matrixData,
                this.state.filters
            );

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.state.organizedData = organizedData;

            // –†–µ–Ω–¥–µ—Ä–∏–º –º–∞—Ç—Ä–∏—Ü—É
            const matrixContainer = Utils.$('#matrix-container');
            if (matrixContainer) {
                MatrixRenderer.renderMatrix(
                    matrixContainer,
                    organizedData,
                    this.state.expandedTechniques
                );
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–æ–≤
            this.updateFilterStatistics(organizedData.filteredCount, organizedData.totalCount);

            console.log(`‚úÖ Matrix rendered: ${organizedData.rows.length} rows, ${organizedData.filteredCount} techniques`);

        } catch (error) {
            console.error('‚ùå Render error:', error);
            this.handleError(error);
        }
    },

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
     * @param {number} filteredCount - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫
     * @param {number} totalCount - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ö–Ω–∏–∫
     */
    updateFilterStatistics(filteredCount, totalCount) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ UI (–µ—Å–ª–∏ –µ—Å—Ç—å)
        let filterStats = Utils.$('.filter-stats');

        if (filterStats) {
            filterStats.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ: ${filteredCount} –∏–∑ ${totalCount} —Ç–µ—Ö–Ω–∏–∫`;
        } else if (filteredCount !== totalCount) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            const filtersContainer = Utils.$('#matrix-filters-container');
            if (filtersContainer) {
                filterStats = Utils.createElement('div', 'filter-stats',
                    `–ü–æ–∫–∞–∑–∞–Ω–æ: ${filteredCount} –∏–∑ ${totalCount} —Ç–µ—Ö–Ω–∏–∫`
                );
                filtersContainer.appendChild(filterStats);
            }
        }
    },

    // ========================================
    // –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
    // ========================================

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
     * @param {Error} error - –û—à–∏–±–∫–∞
     */
    handleError(error) {
        console.error('‚ùå Matrix Page Error:', error);
        this.state.error = error;
        this.state.loading = false;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ UI
        const matrixContainer = Utils.$('#matrix-container');
        if (matrixContainer) {
            MatrixRenderer.renderError(matrixContainer, error.message);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if (window.Notifications) {
            Notifications.show(
                `–û—à–∏–±–∫–∞ –º–∞—Ç—Ä–∏—Ü—ã: ${error.message}`,
                'error',
                { duration: 10000, persistent: false }
            );
        }
    },

    // ========================================
    // –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï
    // ========================================

    /**
     * –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    startAutoRefresh() {
        if (this.refreshTimer) {
            clearInterval(this.refreshTimer);
        }

        this.refreshTimer = setInterval(() => {
            this.refresh();
        }, this.config.refreshInterval);

        console.log(`üîÑ Auto-refresh started (${this.config.refreshInterval / 1000}s interval)`);
    },

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    stopAutoRefresh() {
        if (this.refreshTimer) {
            clearInterval(this.refreshTimer);
            this.refreshTimer = null;
            console.log('‚èπÔ∏è Auto-refresh stopped');
        }
    },

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü—ã
     */
    async refresh() {
        console.log('üîÑ Refreshing matrix data...');

        try {
            await this.loadMatrixData();
            this.organizeMatrixData();
            this.render();
            this.state.lastUpdate = new Date();

            console.log('‚úÖ Matrix data refreshed');

            if (window.Notifications) {
                Notifications.show(
                    '–î–∞–Ω–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
                    'info',
                    { duration: 2000 }
                );
            }

        } catch (error) {
            console.error('‚ùå Refresh failed:', error);

            if (window.Notifications) {
                Notifications.show(
                    '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã',
                    'warning',
                    { duration: 5000 }
                );
            }
        }
    },

    // ========================================
    // –£–ü–†–ê–í–õ–ï–ù–ò–ï –ñ–ò–ó–ù–ï–ù–ù–´–ú –¶–ò–ö–õ–û–ú
    // ========================================

    /**
     * –û—á–∏—Å—Ç–∫–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    cleanup() {
        console.log('üßπ Cleaning up Matrix Page...');

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        this.stopAutoRefresh();

        // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        if (window.MatrixEvents) {
            MatrixEvents.cleanup();
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.state = {
            matrixData: null,
            organizedData: null,
            filters: {
                platform: null,
                coverage: 'all',
                tactic: null,
                search: ''
            },
            expandedTechniques: new Set(),
            loading: false,
            error: null,
            lastUpdate: null,
            initialized: false
        };

        console.log('‚úÖ Matrix Page cleaned up');
    },

    // ========================================
    // –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´
    // ========================================

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    getState() {
        return { ...this.state };
    },

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
     */
    isReady() {
        return this.state.initialized && !this.state.loading && !this.state.error;
    },

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –º–∞—Ç—Ä–∏—Ü—ã
     * @param {string} format - –§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞
     */
    async exportMatrix(format = 'json') {
        if (window.MatrixEvents) {
            return MatrixEvents.exportMatrix(format);
        }

        throw new Error('MatrixEvents not available');
    }
};

// ========================================
// –ê–í–¢–û–ó–ê–ü–£–°–ö
// ========================================

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        MatrixPage.init();
    });
} else {
    // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
    MatrixPage.init();
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
window.MatrixPage = MatrixPage;

// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
if (typeof module !== 'undefined' && module.exports) {
    module.exports = MatrixPage;
}

console.log('‚úÖ Matrix Page v11.0 module loaded');
